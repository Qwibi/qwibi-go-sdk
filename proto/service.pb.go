// Code generated by protoc-gen-go. DO NOT EDIT.
// source: qwibi/service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type QPBxStreamRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QPBxStreamRequest) Reset()         { *m = QPBxStreamRequest{} }
func (m *QPBxStreamRequest) String() string { return proto.CompactTextString(m) }
func (*QPBxStreamRequest) ProtoMessage()    {}
func (*QPBxStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6485529cc119504, []int{0}
}

func (m *QPBxStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QPBxStreamRequest.Unmarshal(m, b)
}
func (m *QPBxStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QPBxStreamRequest.Marshal(b, m, deterministic)
}
func (m *QPBxStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QPBxStreamRequest.Merge(m, src)
}
func (m *QPBxStreamRequest) XXX_Size() int {
	return xxx_messageInfo_QPBxStreamRequest.Size(m)
}
func (m *QPBxStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QPBxStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QPBxStreamRequest proto.InternalMessageInfo

type QPBxStreamResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QPBxStreamResponse) Reset()         { *m = QPBxStreamResponse{} }
func (m *QPBxStreamResponse) String() string { return proto.CompactTextString(m) }
func (*QPBxStreamResponse) ProtoMessage()    {}
func (*QPBxStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6485529cc119504, []int{1}
}

func (m *QPBxStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QPBxStreamResponse.Unmarshal(m, b)
}
func (m *QPBxStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QPBxStreamResponse.Marshal(b, m, deterministic)
}
func (m *QPBxStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QPBxStreamResponse.Merge(m, src)
}
func (m *QPBxStreamResponse) XXX_Size() int {
	return xxx_messageInfo_QPBxStreamResponse.Size(m)
}
func (m *QPBxStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QPBxStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QPBxStreamResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*QPBxStreamRequest)(nil), "QPBxStreamRequest")
	proto.RegisterType((*QPBxStreamResponse)(nil), "QPBxStreamResponse")
}

func init() {
	proto.RegisterFile("qwibi/service.proto", fileDescriptor_c6485529cc119504)
}

var fileDescriptor_c6485529cc119504 = []byte{
	// 175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x2c, 0xcf, 0x4c,
	0xca, 0xd4, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x97,
	0x12, 0x80, 0x08, 0x26, 0x96, 0x96, 0x64, 0xa0, 0x8a, 0x64, 0xe5, 0x67, 0xe6, 0x41, 0x44, 0x94,
	0x84, 0xb9, 0x04, 0x03, 0x03, 0x9c, 0x2a, 0x82, 0x4b, 0x8a, 0x52, 0x13, 0x73, 0x83, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x94, 0x44, 0xb8, 0x84, 0x90, 0x05, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53,
	0x8d, 0x66, 0x30, 0x72, 0xb1, 0x83, 0x84, 0x1d, 0x0b, 0x32, 0x85, 0xb4, 0xb9, 0x58, 0x1c, 0x4b,
	0x4b, 0x32, 0x84, 0x04, 0xf4, 0xc0, 0x22, 0xa5, 0x25, 0x19, 0x50, 0xbd, 0x52, 0x82, 0x48, 0x22,
	0x10, 0x8d, 0x20, 0xc5, 0x5e, 0xf9, 0x99, 0x79, 0x50, 0xc5, 0x20, 0x26, 0xaa, 0x62, 0x88, 0x08,
	0x54, 0xb1, 0x31, 0x17, 0x1b, 0xc4, 0x5e, 0x21, 0x21, 0x3d, 0x0c, 0x97, 0x49, 0x09, 0xeb, 0x61,
	0x3a, 0xcc, 0x80, 0xd1, 0x89, 0x37, 0x8a, 0x1b, 0xec, 0x1d, 0x6b, 0x30, 0x99, 0xc4, 0x06, 0xa6,
	0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x82, 0xd5, 0x07, 0x16, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QPBxApiClient is the client API for QPBxApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QPBxApiClient interface {
	// AUTH return authToken
	Auth(ctx context.Context, in *QPBxAuthRequest, opts ...grpc.CallOption) (*QPBxAuthResponse, error)
	// Join to layer
	Join(ctx context.Context, in *QPBxJoinRequest, opts ...grpc.CallOption) (*QPBxJoinResponse, error)
	// STREAM from the server
	Stream(ctx context.Context, in *QPBxStreamRequest, opts ...grpc.CallOption) (QPBxApi_StreamClient, error)
}

type qPBxApiClient struct {
	cc grpc.ClientConnInterface
}

func NewQPBxApiClient(cc grpc.ClientConnInterface) QPBxApiClient {
	return &qPBxApiClient{cc}
}

func (c *qPBxApiClient) Auth(ctx context.Context, in *QPBxAuthRequest, opts ...grpc.CallOption) (*QPBxAuthResponse, error) {
	out := new(QPBxAuthResponse)
	err := c.cc.Invoke(ctx, "/QPBxApi/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qPBxApiClient) Join(ctx context.Context, in *QPBxJoinRequest, opts ...grpc.CallOption) (*QPBxJoinResponse, error) {
	out := new(QPBxJoinResponse)
	err := c.cc.Invoke(ctx, "/QPBxApi/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qPBxApiClient) Stream(ctx context.Context, in *QPBxStreamRequest, opts ...grpc.CallOption) (QPBxApi_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QPBxApi_serviceDesc.Streams[0], "/QPBxApi/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &qPBxApiStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type QPBxApi_StreamClient interface {
	Recv() (*QPBxStreamResponse, error)
	grpc.ClientStream
}

type qPBxApiStreamClient struct {
	grpc.ClientStream
}

func (x *qPBxApiStreamClient) Recv() (*QPBxStreamResponse, error) {
	m := new(QPBxStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// QPBxApiServer is the server API for QPBxApi service.
type QPBxApiServer interface {
	// AUTH return authToken
	Auth(context.Context, *QPBxAuthRequest) (*QPBxAuthResponse, error)
	// Join to layer
	Join(context.Context, *QPBxJoinRequest) (*QPBxJoinResponse, error)
	// STREAM from the server
	Stream(*QPBxStreamRequest, QPBxApi_StreamServer) error
}

// UnimplementedQPBxApiServer can be embedded to have forward compatible implementations.
type UnimplementedQPBxApiServer struct {
}

func (*UnimplementedQPBxApiServer) Auth(ctx context.Context, req *QPBxAuthRequest) (*QPBxAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Auth not implemented")
}
func (*UnimplementedQPBxApiServer) Join(ctx context.Context, req *QPBxJoinRequest) (*QPBxJoinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedQPBxApiServer) Stream(req *QPBxStreamRequest, srv QPBxApi_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}

func RegisterQPBxApiServer(s *grpc.Server, srv QPBxApiServer) {
	s.RegisterService(&_QPBxApi_serviceDesc, srv)
}

func _QPBxApi_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QPBxAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QPBxApiServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QPBxApi/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QPBxApiServer).Auth(ctx, req.(*QPBxAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QPBxApi_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QPBxJoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QPBxApiServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QPBxApi/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QPBxApiServer).Join(ctx, req.(*QPBxJoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QPBxApi_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(QPBxStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QPBxApiServer).Stream(m, &qPBxApiStreamServer{stream})
}

type QPBxApi_StreamServer interface {
	Send(*QPBxStreamResponse) error
	grpc.ServerStream
}

type qPBxApiStreamServer struct {
	grpc.ServerStream
}

func (x *qPBxApiStreamServer) Send(m *QPBxStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _QPBxApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "QPBxApi",
	HandlerType: (*QPBxApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Auth",
			Handler:    _QPBxApi_Auth_Handler,
		},
		{
			MethodName: "Join",
			Handler:    _QPBxApi_Join_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _QPBxApi_Stream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "qwibi/service.proto",
}
